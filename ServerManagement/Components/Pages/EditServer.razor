@page "/servers/{id:int}"
@inject NavigationManager Navigation

<h3>Edit Server</h3>
<br />
<br />

@if (_server != null)
{
    <EditForm Model="_server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <InputNumber @bind-Value="_server.Id" hidden />

        <FieldComponent Label="Name">
            <InputComponent>
                <InputText @bind-Value="_server.Name" class="form-control"></InputText>
            </InputComponent>
            <ValidationComponent>
                <ValidationMessage For="() => _server.Name" />
            </ValidationComponent>
        </FieldComponent>

        <FieldComponent Label="City">
            <InputComponent>
                <InputText @bind-Value="_server.City" class="form-control"></InputText>
            </InputComponent>
            <ValidationComponent>
                <ValidationMessage For="() => _server.City" />
            </ValidationComponent>
        </FieldComponent>

        <FieldComponent Label="City">
            <InputComponent>
                <InputCheckbox @bind-Value="_server.IsRunning" class="form-check-input"></InputCheckbox>
            </InputComponent>
        </FieldComponent>
        <button type="submit" class="btn btn-primary">Update</button>
        &nbsp
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}


@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Server _server { get; set; }

    protected override void OnParametersSet()
    {
        _server ??= ServersRepository.GetServerById(this.Id);
    }

    private void Submit()
    {
        if (_server != null)
        {
            ServersRepository.UpdateServer(_server.Id, _server);
        }
        Navigation.NavigateTo("/servers");
    }
}
