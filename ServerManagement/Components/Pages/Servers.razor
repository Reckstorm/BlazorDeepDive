@page "/servers"
@inject NavigationManager Navigation;

<h3>Servers</h3>
<br />
<br />
<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card">
                    <img src="/images/@(city).png" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />
<ServerComponent @rendermode="InteractiveServer"></ServerComponent>
<br />
<br />
<ul>
    @foreach (var server in servers)
    {
        <li>
            @server.Name is in @server.City is
            <span style="color:@((server.IsRunning?"green":"red"))">
                @(server.IsRunning ? "Online" : "Offline")
                &nbsp;
                <a href="/servers/@server.Id" class="btn btn-link">Edit</a>
                &nbsp;
                <EditForm Model="server" FormName="@($"formDelete-{server.Id}")" OnValidSubmit="() => Delete(server.Id)">
                    <button type="submit" class="btn btn-danger">Delete</button>
                </EditForm>
            </span>
        </li>
    }
</ul>

<br/>
<br/>

<a href="/servers/create" class="btn btn-primary">Add server</a>


@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Toronto");
    private List<string> cities = CitiesRepository.GetCities();
    private void Delete(int serverId)
    {
        if(serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            Navigation.NavigateTo("/servers");
        }
    }
}
