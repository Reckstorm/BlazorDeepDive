@inject NavigationManager Navigation

@if (Server != null)
{
    <tr @key="Server.Id" style="background-color: @(GetBGColor())">
        <td>
            @Server.Name
        </td>
        <td>
            @Server.City
        </td>
        <td>
            <span style="color:@((Server.IsRunning?"green":"red"))">
            @(Server.IsRunning ? "Online" : "Offline")</span>
        </td>
        <td>
            @if (Server.IsRunning)
            {
                <span style="color:black">@(new Random().Next(0, 10000))</span>
            }
            else
            {
                <span>N/A</span>
            }
        </td>
        <td>
            @if (Server.IsRunning)
            {
                <button class="btn btn-outline-danger" @onclick="@(() => Server.IsRunning = false)">Turn Off</button>
            }
            else
            {
                <button class="btn btn-outline-success" @onclick="@(() => Server.IsRunning = true)">Turn On</button>
            }
            <a href="/server/@Server.Id" class="btn btn-outline-primary">Edit</a>
            <button type="button" class="btn btn-outline-danger" @onclick="@(() => Delete(Server.Id))">Delete</button>
        </td>
@*         <td>
            <EditForm Model="Server" FormName="@($"formDelete-{Server.Id}")" OnValidSubmit="() => Delete(Server.Id)">
                <button type="submit" class="btn btn-danger">Delete</button>
            </EditForm>
        </td> *@
    </tr>
}

@code
{
    [Parameter]
    public Server Server { get; set; }

    [CascadingParameter(Name = "SelectedCity")]
    public string SelectedCity { get; set; }

    private void Delete(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            Navigation.NavigateTo("/servers", true);
        }
    }

    private string GetBGColor()
    {
        if(SelectedCity != null)
        {
            switch (SelectedCity)
            {
                case "Toronto": return "powderblue";
                case "Montreal": return "lightgray";
                case "Ottawa": return "palegreen";
                case "Calgary": return "pink";
                default: return "white";
            }
        }
        return "white";
    }
}
